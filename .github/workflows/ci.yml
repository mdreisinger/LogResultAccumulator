name: ci

env:
  ECR_REPOSITORY_ACCUMULATOR: logresultaccumulator
  ECR_REPOSITORY_GENERATOR: loggenerator
  ECR_REPOSITORY_UPLOADER: loguploader
  ECR_REGISTRY: 126493000772.dkr.ecr.us-west-2.amazonaws.com

permissions:
  contents: read

on: [push]

jobs:
  
  integrate:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: "3.9"

    - name: Install dependencies
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        poetry install

    - name: Analysing the code with pylint
      run: |
        poetry run pylint $(git ls-files '*.py')

    - name: Test with pytest
      run: |
        poetry run pytest LogResultAccumulator/tests/test_accumulate_results.py --log-cli-level=DEBUG -x
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
    
    - name: Build and push accumulator image to ECR
      id: build-image-accumulator
      run: |
        aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin $ECR_REGISTRY
        docker build -t logresultaccumulator -f Dockerfile.accumulator .
        docker tag logresultaccumulator:latest $ECR_REGISTRY/$ECR_REPOSITORY_ACCUMULATOR:latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY_ACCUMULATOR:latest
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY_ACCUMULATOR:latest"

    - name: Build and push uploader image to ECR
      id: build-image-uploader
      run: |
        aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin $ECR_REGISTRY
        docker build -t loguploader -f Dockerfile.loguploader .
        docker tag loguploader:latest $ECR_REGISTRY/$ECR_REPOSITORY_UPLOADER:latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY_UPLOADER:latest
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY_UPLOADER:latest"

    - name: Build and push generator image to ECR
      id: build-image-generator
      run: |
        aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin $ECR_REGISTRY
        docker build -t loggenerator -f Dockerfile.logupgenerator .
        docker tag loggenerator:latest $ECR_REGISTRY/$ECR_REPOSITORY_GENERATOR:latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY_GENERATOR:latest
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY_GENERATOR:latest"